/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn more about Gradle by exploring our samples at https://docs.gradle.org/6.8.1/samples
 */

plugins {
	id 'org.springframework.boot' version '2.4.4'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
  id 'java'
  id 'checkstyle'
  id "com.github.spotbugs" version "4.6.0"
  id "application"
}


spotbugsMain {
    ignoreFailures = true   // failures are handled via automatic testing
    showStackTraces = false
    reports {
        html {
            enabled = false
            destination = file("$buildDir/reports/spotbugs/main/spotbugs.html")
            //stylesheet = 'fancy-hist.xsl'
        }
        xml {
            enabled = true
            destination = file("$buildDir/reports/spotbugs/spotbugs.xml")
        }
    }
}

spotbugsTest {
    ignoreFailures = false
    showStackTraces = false
    enabled = false
}


checkstyle {
    // assign the latest checkstyle version explicitly
    // default version is very old, likes 5.9
    toolVersion = '8.38'
    // checkstyle.xml copy from:
    // https://raw.githubusercontent.com/checkstyle/checkstyle/checkstyle-8.6/src/main/resources/google_checks.xml
    // the version should be as same as plugin version
    configFile = rootProject.file('config/checkstyle/google_checks.xml')    // you can of course change this to something else
    sourceSets = [] // remove from default build only explicit calls ig.e. gradlew checkStyleMain
}


run {
    standardInput = System.in
}

application {
    mainClass = 'assigment4.terminal'
}

group 'se.lnu.oop'
version '1.0-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}



dependencies {
  // https://mvnrepository.com/artifact/com.fasterxml.jackson.dataformat/jackson-dataformat-csv
  implementation group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-csv', version: '2.9.2'
  compile 'com.opencsv:opencsv:5.4'
	implementation 'org.springframework.boot:spring-boot-starter'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
  testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
  testImplementation group: 'junit', name: 'junit', version: '4.12'
  implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'
  implementation group: 'au.com.bytecode', name: 'opencsv', version: '2.4'
}

test {
	  // make sure we run the code quality stuff first
    // we need the generated reports when testing
    dependsOn checkstyleMain
    dependsOn spotbugsMain

    // also some verbose output so we get some info in the console when we run tests
    testLogging {
        outputs.upToDateWhen {false}
        showStandardStreams = true
    }
}

